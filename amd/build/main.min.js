define(['core_form/modalform', 'core/notification', 'core/str'],
    function(ModalForm, Notification, Str) {

        var maxSteps = 6;


        function openWizard(courseid, step, draftid) {
            step = step || 1;
            draftid = draftid || 0;
            var saveKey = step < maxSteps ? 'submitnext' : 'submitfinal';

            return Promise.all([
                Str.get_string('pluginname', 'block_catquiz_feedbackwizard'),
                Str.get_string(saveKey, 'block_catquiz_feedbackwizard'),
                Str.get_string('submitprevious', 'block_catquiz_feedbackwizard')
            ]).then(function(results) {
                var title = results[0];
                var nextText = results[1];
                var backText = results[2];

                var modalForm = new ModalForm({
                    formClass: 'block_catquiz_feedbackwizard\\form\\wizard',
                    args: {
                        courseid: courseid,
                        step: step,
                        draftid: draftid
                    },
                    modalConfig: {
                        title: title,
                        type: 'SAVE_CANCEL',
                        large: true,
                        scrollable: true
                    },
                    saveButtonText: nextText
                });

                var closeModal = function() {
                    if (typeof modalForm.close === 'function') {
                        return modalForm.close();
                    } else if (modalForm.modal && typeof modalForm.modal.destroy === 'function') {
                        modalForm.modal.destroy();
                        return Promise.resolve();
                    } else if (modalForm.modal && typeof modalForm.modal.hide === 'function') {
                        modalForm.modal.hide();
                        return Promise.resolve();
                    }
                    return Promise.resolve();
                };

                // Handle form submission (Next/Submit button)
                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, function(e) {
                    var response = e.detail || {};

                    if (response.status === 'continue') {
                        closeModal().then(function() {
                            Notification.addNotification({
                                message: response.message,
                                type: 'success'
                            });
                            return openWizard(courseid, response.nextstep, response.draftid);
                        }).catch(Notification.exception);

                    } else if (response.status === 'submitted') {
                        closeModal().then(function() {
                            Notification.addNotification({
                                message: response.message,
                                type: 'success'
                            });
                        }).catch(Notification.exception);
                    }
                });

                // Handle cancel button - trigger back navigation
                modalForm.addEventListener(modalForm.events.FORM_CANCELLED, function(e) {
                    // Prevent default cancel behavior
                    if (e.preventDefault) {
                        e.preventDefault();
                    }

                    // If we're on step 1, just close
                    if (step <= 1) {
                        closeModal();
                        return;
                    }

                    // For steps > 1, save and go back
                    // We need to submit the form with a special "back" action
                    var modalRoot = null;
                    if (modalForm.modal && typeof modalForm.modal.getRoot === 'function') {
                        var jq = modalForm.modal.getRoot();
                        modalRoot = jq && (jq[0] || (jq.get && jq.get(0)));
                    }

                    if (modalRoot) {
                        var form = modalRoot.querySelector('form');
                        if (form) {
                            // Add hidden field to indicate this is a "back" action
                            var actionInput = form.querySelector('input[name="action"]');
                            if (!actionInput) {
                                actionInput = document.createElement('input');
                                actionInput.type = 'hidden';
                                actionInput.name = 'action';
                                form.appendChild(actionInput);
                            }
                            actionInput.value = 'back';

                            // Trigger form submission programmatically
                            var submitBtn = modalRoot.querySelector('.modal-footer .btn-primary');
                            if (submitBtn) {
                                submitBtn.click();
                                return;
                            }
                        }
                    }

                    // Fallback: just close
                    closeModal();
                });

                modalForm.show().then(function() {
                    // Customize cancel button text after modal is shown
                    var cancelBtn = document.querySelector('.modal-footer .btn-secondary');
                    if (cancelBtn && step > 1) {
                        cancelBtn.textContent = backText;
                    } else if (cancelBtn && step === 1) {
                        cancelBtn.style.display = 'none';
                    }
                });
            }).catch(Notification.exception);
        }

        return {
            init: function(params) {
                if (params && params.length > 0 && params[0].maxSteps) {
                    maxSteps = parseInt(params[0].maxSteps, 10);
                }

                document.addEventListener('click', function(e) {
                    var trigger = e.target.closest('.js-open-catquiz_feedbackwizard[data-action="open-wizard"]');
                    if (!trigger) {
                        return;
                    }
                    e.preventDefault();
                    var courseid = parseInt(trigger.getAttribute('data-courseid'), 10) || 0;
                    openWizard(courseid, 1, 0).catch(Notification.exception);
                });
            }
        };
    });
